# Tweets Generator

## Overview
This project implements a Markov Chain-based tweets generator. It reads a corpus of text, builds a Markov Chain, and generates random tweets based on the input data.

## Features
- Reads a corpus of text from a file.
- Builds a Markov Chain from the input text.
- Generates random tweets based on the Markov Chain.
- Includes debug statements for easier troubleshooting.

## Requirements
- C compiler (e.g., GCC)
- Standard C libraries (stdio.h, stdlib.h, string.h)

## Files
- `tweets_generator.c`: Main program file.
- `markov_chain.c`: Implementation of the Markov Chain.
- `linked_list.c`: Implementation of a linked list used by the Markov Chain.
- `markov_chain.h`: Header file for the Markov Chain.
- `linked_list.h`: Header file for the linked list.
- `ex1_tester.py`: Python script to test the program.


## Usage

### Compilation
To compile the program, use the following command:
```bash
gcc tweets_generator.c markov_chain.c linked_list.c -o tweetsGenerator
```

### Execution
To run the program, use the following command:
```bash
./tweetsGenerator <corpus_file> <num_tweets> <tweet_length>
```

Where:
- `<corpus_file>`: Path to the file containing the corpus of text.
- `<num_tweets>`: Number of tweets to generate.
- `<tweet_length>`: Maximum length of each tweet.

### Example
```bash
./tweetsGenerator justdoit_tweets.txt 5 140
```


